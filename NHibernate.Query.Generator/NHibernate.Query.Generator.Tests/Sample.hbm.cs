//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class For {
        
        /// Query Builder for member Customer
        public static Query.QueryBuilder<My.Simple.Model.Customer> Customer {
            get {
                return new Query.QueryBuilder<My.Simple.Model.Customer>();
            }
        }
        
        /// Query Builder for member Address
        public static Query.QueryBuilder<My.Simple.Model.Address> Address {
            get {
                return new Query.QueryBuilder<My.Simple.Model.Address>();
            }
        }
        
        /// Query Builder for member CompositeCustomer
        public static Query.QueryBuilder<My.Simple.Model.CompositeCustomer> CompositeCustomer {
            get {
                return new Query.QueryBuilder<My.Simple.Model.CompositeCustomer>();
            }
        }
        
        /// Query Builder for member BadCustomer
        public static Query.QueryBuilder<My.Simple.Model.BadCustomer> BadCustomer {
            get {
                return new Query.QueryBuilder<My.Simple.Model.BadCustomer>();
            }
        }
        
        /// Query Builder for member BadCustomer2
        public static Query.QueryBuilder<My.Simple.Model.BadCustomer2> BadCustomer2 {
            get {
                return new Query.QueryBuilder<My.Simple.Model.BadCustomer2>();
            }
        }
        
        /// Query Builder for member ValuedCustomer
        public static Query.QueryBuilder<My.Simple.Model.ValuedCustomer> ValuedCustomer {
            get {
                return new Query.QueryBuilder<My.Simple.Model.ValuedCustomer>();
            }
        }
        
        /// Query Builder for member ValuedCustomer2
        public static Query.QueryBuilder<My.Simple.Model.ValuedCustomer2> ValuedCustomer2 {
            get {
                return new Query.QueryBuilder<My.Simple.Model.ValuedCustomer2>();
            }
        }
    }
    
    public partial class Where {
        
        /// Where for member _root_Where_Customer
        static Root_Where_Customer _root_Where_Customer = new Root_Where_Customer();
        
        /// Where for member _root_Where_Address
        static Root_Where_Address _root_Where_Address = new Root_Where_Address();
        
        /// Where for member _root_Where_CompositeCustomer
        static Root_Where_CompositeCustomer _root_Where_CompositeCustomer = new Root_Where_CompositeCustomer();
        
        /// Where for member _root_Where_BadCustomer
        static Root_Where_BadCustomer _root_Where_BadCustomer = new Root_Where_BadCustomer();
        
        /// Where for member _root_Where_BadCustomer2
        static Root_Where_BadCustomer2 _root_Where_BadCustomer2 = new Root_Where_BadCustomer2();
        
        /// Where for member _root_Where_ValuedCustomer
        static Root_Where_ValuedCustomer _root_Where_ValuedCustomer = new Root_Where_ValuedCustomer();
        
        /// Where for member _root_Where_ValuedCustomer2
        static Root_Where_ValuedCustomer2 _root_Where_ValuedCustomer2 = new Root_Where_ValuedCustomer2();
        
        /// Where for member Customer
        public static Root_Where_Customer Customer {
            get {
                return _root_Where_Customer;
            }
        }
        
        /// Where for member Address
        public static Root_Where_Address Address {
            get {
                return _root_Where_Address;
            }
        }
        
        /// Where for member CompositeCustomer
        public static Root_Where_CompositeCustomer CompositeCustomer {
            get {
                return _root_Where_CompositeCustomer;
            }
        }
        
        /// Where for member BadCustomer
        public static Root_Where_BadCustomer BadCustomer {
            get {
                return _root_Where_BadCustomer;
            }
        }
        
        /// Where for member BadCustomer2
        public static Root_Where_BadCustomer2 BadCustomer2 {
            get {
                return _root_Where_BadCustomer2;
            }
        }
        
        /// Where for member ValuedCustomer
        public static Root_Where_ValuedCustomer ValuedCustomer {
            get {
                return _root_Where_ValuedCustomer;
            }
        }
        
        /// Where for member ValuedCustomer2
        public static Root_Where_ValuedCustomer2 ValuedCustomer2 {
            get {
                return _root_Where_ValuedCustomer2;
            }
        }
        
        /// Where for member Where_Customer
        public partial class Where_Customer<T1> : Query.WhereClause<T1>
         {
            
            /// Where for member .ctor
            public Where_Customer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_Customer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T1> Name {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T1>("Name", temp);
                }
            }
            
            /// Where for member 
            public virtual Query.WhereClause<T1> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClause<T1>("Id", temp);
                }
            }
            
            /// Where for member 
            public virtual Where_Address<T1> Address {
                get {
                    string temp = QpAssociationPath;
                    temp = ((temp + ".") 
                                + "Address");
                    return new Where_Address<T1>("Address", temp, true);
                }
            }
            
            /// Where for member Home
            public virtual Where_Home<T1> Home {
                get {
                    return new Where_Home<T1>("Home", null);
                }
            }
            
            /// Where for member Where_Home
            public partial class Where_Home<T2> : Where_Customer<T2>
             {
                
                /// Where for member .ctor
                public Where_Home(string QpName, string QpAssociationPath) : 
                        base(QpName, QpAssociationPath) {
                }
                
                /// Where for member .ctor
                public Where_Home(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                        base(QpName, QpAssociationPath, QpBackTrack) {
                }
                
                /// Where for member 
                public virtual Query.WhereClauseProperty<T1> Phone {
                    get {
                        string temp = QpAssociationPath;
                        return new Query.WhereClauseProperty<T1>("Home.Phone", temp);
                    }
                }
                
                /// Where for member 
                public virtual Where_Address<T1> Address {
                    get {
                        string temp = QpAssociationPath;
                        temp = ((temp + ".") 
                                    + "Address");
                        return new Where_Address<T1>("Home.Address", temp, true);
                    }
                }
            }
        }
        
        /// Where for member Root_Where_Customer
        public partial class Root_Where_Customer : Where_Customer<My.Simple.Model.Customer> {
            
            /// Where for member .ctor
            public Root_Where_Customer() : 
                    base("this", null) {
            }
        }
        
        /// Where for member Where_Address
        public partial class Where_Address<T3> : Query.WhereClause<T3>
         {
            
            /// Where for member .ctor
            public Where_Address(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_Address(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClause<T3> Pk {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClause<T3>("Pk", temp);
                }
            }
        }
        
        /// Where for member Root_Where_Address
        public partial class Root_Where_Address : Where_Address<My.Simple.Model.Address> {
            
            /// Where for member .ctor
            public Root_Where_Address() : 
                    base("this", null) {
            }
        }
        
        /// Where for member Where_CompositeCustomer
        public partial class Where_CompositeCustomer<T4> : Query.WhereClause<T4>
         {
            
            /// Where for member .ctor
            public Where_CompositeCustomer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_CompositeCustomer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T4> Name {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T4>("Name", temp);
                }
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T4> CustomerId {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T4>("CustomerId", temp);
                }
            }
            
            /// Where for member 
            public virtual Where_BadCustomer<T4> Foo {
                get {
                    string temp = QpAssociationPath;
                    temp = ((temp + ".") 
                                + "Foo");
                    return new Where_BadCustomer<T4>("Foo", temp, true);
                }
            }
        }
        
        /// Where for member Root_Where_CompositeCustomer
        public partial class Root_Where_CompositeCustomer : Where_CompositeCustomer<My.Simple.Model.CompositeCustomer> {
            
            /// Where for member .ctor
            public Root_Where_CompositeCustomer() : 
                    base("this", null) {
            }
        }
        
        /// Where for member Where_BadCustomer
        public partial class Where_BadCustomer<T5> : Where_Customer<T5>
         {
            
            /// Where for member .ctor
            public Where_BadCustomer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_BadCustomer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T5> Foo {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T5>("Foo", temp);
                }
            }
        }
        
        /// Where for member Root_Where_BadCustomer
        public partial class Root_Where_BadCustomer : Where_BadCustomer<My.Simple.Model.BadCustomer> {
            
            /// Where for member .ctor
            public Root_Where_BadCustomer() : 
                    base("this", null) {
            }
        }
        
        /// Where for member Where_BadCustomer2
        public partial class Where_BadCustomer2<T6> : Query.WhereClause<T6>
         {
            
            /// Where for member .ctor
            public Where_BadCustomer2(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_BadCustomer2(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T6> Foo {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T6>("Foo", temp);
                }
            }
        }
        
        /// Where for member Root_Where_BadCustomer2
        public partial class Root_Where_BadCustomer2 : Where_BadCustomer2<My.Simple.Model.BadCustomer2> {
            
            /// Where for member .ctor
            public Root_Where_BadCustomer2() : 
                    base("this", null) {
            }
        }
        
        /// Where for member Where_ValuedCustomer
        public partial class Where_ValuedCustomer<T7> : Where_Customer<T7>
         {
            
            /// Where for member .ctor
            public Where_ValuedCustomer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_ValuedCustomer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T7> Bar {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T7>("Bar", temp);
                }
            }
        }
        
        /// Where for member Root_Where_ValuedCustomer
        public partial class Root_Where_ValuedCustomer : Where_ValuedCustomer<My.Simple.Model.ValuedCustomer> {
            
            /// Where for member .ctor
            public Root_Where_ValuedCustomer() : 
                    base("this", null) {
            }
        }
        
        /// Where for member Where_ValuedCustomer2
        public partial class Where_ValuedCustomer2<T8> : Query.WhereClause<T8>
         {
            
            /// Where for member .ctor
            public Where_ValuedCustomer2(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_ValuedCustomer2(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T8> Bar {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T8>("Bar", temp);
                }
            }
        }
        
        /// Where for member Root_Where_ValuedCustomer2
        public partial class Root_Where_ValuedCustomer2 : Where_ValuedCustomer2<My.Simple.Model.ValuedCustomer2> {
            
            /// Where for member .ctor
            public Root_Where_ValuedCustomer2() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// Projection for member _root_Projection_Customer
        static Root_Projection_Customer _root_Projection_Customer = new Root_Projection_Customer();
        
        /// Projection for member _root_Projection_Address
        static Root_Projection_Address _root_Projection_Address = new Root_Projection_Address();
        
        /// Projection for member _root_Projection_CompositeCustomer
        static Root_Projection_CompositeCustomer _root_Projection_CompositeCustomer = new Root_Projection_CompositeCustomer();
        
        /// Projection for member _root_Projection_BadCustomer
        static Root_Projection_BadCustomer _root_Projection_BadCustomer = new Root_Projection_BadCustomer();
        
        /// Projection for member _root_Projection_BadCustomer2
        static Root_Projection_BadCustomer2 _root_Projection_BadCustomer2 = new Root_Projection_BadCustomer2();
        
        /// Projection for member _root_Projection_ValuedCustomer
        static Root_Projection_ValuedCustomer _root_Projection_ValuedCustomer = new Root_Projection_ValuedCustomer();
        
        /// Projection for member _root_Projection_ValuedCustomer2
        static Root_Projection_ValuedCustomer2 _root_Projection_ValuedCustomer2 = new Root_Projection_ValuedCustomer2();
        
        /// Projection for member Customer
        public static Root_Projection_Customer Customer {
            get {
                return _root_Projection_Customer;
            }
        }
        
        /// Projection for member Address
        public static Root_Projection_Address Address {
            get {
                return _root_Projection_Address;
            }
        }
        
        /// Projection for member CompositeCustomer
        public static Root_Projection_CompositeCustomer CompositeCustomer {
            get {
                return _root_Projection_CompositeCustomer;
            }
        }
        
        /// Projection for member BadCustomer
        public static Root_Projection_BadCustomer BadCustomer {
            get {
                return _root_Projection_BadCustomer;
            }
        }
        
        /// Projection for member BadCustomer2
        public static Root_Projection_BadCustomer2 BadCustomer2 {
            get {
                return _root_Projection_BadCustomer2;
            }
        }
        
        /// Projection for member ValuedCustomer
        public static Root_Projection_ValuedCustomer ValuedCustomer {
            get {
                return _root_Projection_ValuedCustomer;
            }
        }
        
        /// Projection for member ValuedCustomer2
        public static Root_Projection_ValuedCustomer2 ValuedCustomer2 {
            get {
                return _root_Projection_ValuedCustomer2;
            }
        }
        
        /// Projection for member Projection_Customer
        public partial class Projection_Customer<T9> : Query.ProjectionEntity<T9>
         {
            
            /// Projection for member .ctor
            public Projection_Customer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_Customer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T9> Name {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T9>("Name", temp);
                }
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T9> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T9>("Id", temp);
                }
            }
            
            /// Projection for member 
            public virtual Projection_Address<T9> Address {
                get {
                    string temp = QpAssociationPath;
                    temp = ((temp + ".") 
                                + "Address");
                    return new Projection_Address<T9>("Address", temp, true);
                }
            }
            
            /// Projection for member Home
            public virtual Projection_Home<T9> Home {
                get {
                    return new Projection_Home<T9>("Home", null);
                }
            }
            
            /// Projection for member Projection_Home
            public partial class Projection_Home<T10> : Projection_Customer<T10>
             {
                
                /// Projection for member .ctor
                public Projection_Home(string QpName, string QpAssociationPath) : 
                        base(QpName, QpAssociationPath) {
                }
                
                /// Projection for member .ctor
                public Projection_Home(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                        base(QpName, QpAssociationPath, QpBackTrack) {
                }
                
                /// Projection for member 
                public virtual Query.ProjectionClauseProperty<T9> Phone {
                    get {
                        string temp = QpAssociationPath;
                        return new Query.ProjectionClauseProperty<T9>("Home.Phone", temp);
                    }
                }
                
                /// Projection for member 
                public virtual Projection_Address<T9> Address {
                    get {
                        string temp = QpAssociationPath;
                        temp = ((temp + ".") 
                                    + "Address");
                        return new Projection_Address<T9>("Home.Address", temp, true);
                    }
                }
            }
        }
        
        /// Projection for member Root_Projection_Customer
        public partial class Root_Projection_Customer : Projection_Customer<My.Simple.Model.Customer> {
            
            /// Projection for member .ctor
            public Root_Projection_Customer() : 
                    base("this", null) {
            }
        }
        
        /// Projection for member Projection_Address
        public partial class Projection_Address<T11> : Query.ProjectionEntity<T11>
         {
            
            /// Projection for member .ctor
            public Projection_Address(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_Address(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T11> Pk {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T11>("Pk", temp);
                }
            }
        }
        
        /// Projection for member Root_Projection_Address
        public partial class Root_Projection_Address : Projection_Address<My.Simple.Model.Address> {
            
            /// Projection for member .ctor
            public Root_Projection_Address() : 
                    base("this", null) {
            }
        }
        
        /// Projection for member Projection_CompositeCustomer
        public partial class Projection_CompositeCustomer<T12> : Query.ProjectionEntity<T12>
         {
            
            /// Projection for member .ctor
            public Projection_CompositeCustomer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_CompositeCustomer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T12> Name {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T12>("Name", temp);
                }
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T12> CustomerId {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T12>("CustomerId", temp);
                }
            }
            
            /// Projection for member 
            public virtual Projection_BadCustomer<T12> Foo {
                get {
                    string temp = QpAssociationPath;
                    temp = ((temp + ".") 
                                + "Foo");
                    return new Projection_BadCustomer<T12>("Foo", temp, true);
                }
            }
        }
        
        /// Projection for member Root_Projection_CompositeCustomer
        public partial class Root_Projection_CompositeCustomer : Projection_CompositeCustomer<My.Simple.Model.CompositeCustomer> {
            
            /// Projection for member .ctor
            public Root_Projection_CompositeCustomer() : 
                    base("this", null) {
            }
        }
        
        /// Projection for member Projection_BadCustomer
        public partial class Projection_BadCustomer<T13> : Projection_Customer<T13>
         {
            
            /// Projection for member .ctor
            public Projection_BadCustomer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_BadCustomer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T13> Foo {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T13>("Foo", temp);
                }
            }
        }
        
        /// Projection for member Root_Projection_BadCustomer
        public partial class Root_Projection_BadCustomer : Projection_BadCustomer<My.Simple.Model.BadCustomer> {
            
            /// Projection for member .ctor
            public Root_Projection_BadCustomer() : 
                    base("this", null) {
            }
        }
        
        /// Projection for member Projection_BadCustomer2
        public partial class Projection_BadCustomer2<T14> : Query.ProjectionEntity<T14>
         {
            
            /// Projection for member .ctor
            public Projection_BadCustomer2(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_BadCustomer2(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T14> Foo {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T14>("Foo", temp);
                }
            }
        }
        
        /// Projection for member Root_Projection_BadCustomer2
        public partial class Root_Projection_BadCustomer2 : Projection_BadCustomer2<My.Simple.Model.BadCustomer2> {
            
            /// Projection for member .ctor
            public Root_Projection_BadCustomer2() : 
                    base("this", null) {
            }
        }
        
        /// Projection for member Projection_ValuedCustomer
        public partial class Projection_ValuedCustomer<T15> : Projection_Customer<T15>
         {
            
            /// Projection for member .ctor
            public Projection_ValuedCustomer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_ValuedCustomer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T15> Bar {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T15>("Bar", temp);
                }
            }
        }
        
        /// Projection for member Root_Projection_ValuedCustomer
        public partial class Root_Projection_ValuedCustomer : Projection_ValuedCustomer<My.Simple.Model.ValuedCustomer> {
            
            /// Projection for member .ctor
            public Root_Projection_ValuedCustomer() : 
                    base("this", null) {
            }
        }
        
        /// Projection for member Projection_ValuedCustomer2
        public partial class Projection_ValuedCustomer2<T16> : Query.ProjectionEntity<T16>
         {
            
            /// Projection for member .ctor
            public Projection_ValuedCustomer2(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_ValuedCustomer2(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T16> Bar {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T16>("Bar", temp);
                }
            }
        }
        
        /// Projection for member Root_Projection_ValuedCustomer2
        public partial class Root_Projection_ValuedCustomer2 : Projection_ValuedCustomer2<My.Simple.Model.ValuedCustomer2> {
            
            /// Projection for member .ctor
            public Root_Projection_ValuedCustomer2() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// OrderBy for member _root_OrderBy_Customer
        static Root_OrderBy_Customer _root_OrderBy_Customer = new Root_OrderBy_Customer();
        
        /// OrderBy for member _root_OrderBy_Address
        static Root_OrderBy_Address _root_OrderBy_Address = new Root_OrderBy_Address();
        
        /// OrderBy for member _root_OrderBy_CompositeCustomer
        static Root_OrderBy_CompositeCustomer _root_OrderBy_CompositeCustomer = new Root_OrderBy_CompositeCustomer();
        
        /// OrderBy for member _root_OrderBy_BadCustomer
        static Root_OrderBy_BadCustomer _root_OrderBy_BadCustomer = new Root_OrderBy_BadCustomer();
        
        /// OrderBy for member _root_OrderBy_BadCustomer2
        static Root_OrderBy_BadCustomer2 _root_OrderBy_BadCustomer2 = new Root_OrderBy_BadCustomer2();
        
        /// OrderBy for member _root_OrderBy_ValuedCustomer
        static Root_OrderBy_ValuedCustomer _root_OrderBy_ValuedCustomer = new Root_OrderBy_ValuedCustomer();
        
        /// OrderBy for member _root_OrderBy_ValuedCustomer2
        static Root_OrderBy_ValuedCustomer2 _root_OrderBy_ValuedCustomer2 = new Root_OrderBy_ValuedCustomer2();
        
        /// OrderBy for member Customer
        public static Root_OrderBy_Customer Customer {
            get {
                return _root_OrderBy_Customer;
            }
        }
        
        /// OrderBy for member Address
        public static Root_OrderBy_Address Address {
            get {
                return _root_OrderBy_Address;
            }
        }
        
        /// OrderBy for member CompositeCustomer
        public static Root_OrderBy_CompositeCustomer CompositeCustomer {
            get {
                return _root_OrderBy_CompositeCustomer;
            }
        }
        
        /// OrderBy for member BadCustomer
        public static Root_OrderBy_BadCustomer BadCustomer {
            get {
                return _root_OrderBy_BadCustomer;
            }
        }
        
        /// OrderBy for member BadCustomer2
        public static Root_OrderBy_BadCustomer2 BadCustomer2 {
            get {
                return _root_OrderBy_BadCustomer2;
            }
        }
        
        /// OrderBy for member ValuedCustomer
        public static Root_OrderBy_ValuedCustomer ValuedCustomer {
            get {
                return _root_OrderBy_ValuedCustomer;
            }
        }
        
        /// OrderBy for member ValuedCustomer2
        public static Root_OrderBy_ValuedCustomer2 ValuedCustomer2 {
            get {
                return _root_OrderBy_ValuedCustomer2;
            }
        }
        
        /// OrderBy for member OrderBy_Customer
        public partial class OrderBy_Customer<T17> : Query.QueryPart
         {
            
            /// OrderBy for member .ctor
            public OrderBy_Customer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_Customer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T17> Name {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T17>("Name", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T17> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T17>("Id", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual OrderBy_Address<T17> Address {
                get {
                    string temp = QpAssociationPath;
                    temp = ((temp + ".") 
                                + "Address");
                    return new OrderBy_Address<T17>("Address", temp, true);
                }
            }
            
            /// OrderBy for member Home
            public virtual OrderBy_Home<T17> Home {
                get {
                    return new OrderBy_Home<T17>("Home", null);
                }
            }
            
            /// OrderBy for member OrderBy_Home
            public partial class OrderBy_Home<T18> : OrderBy_Customer<T18>
             {
                
                /// OrderBy for member .ctor
                public OrderBy_Home(string QpName, string QpAssociationPath) : 
                        base(QpName, QpAssociationPath) {
                }
                
                /// OrderBy for member .ctor
                public OrderBy_Home(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                        base(QpName, QpAssociationPath, QpBackTrack) {
                }
                
                /// OrderBy for member 
                public virtual Query.OrderByClauseProperty<T17> Phone {
                    get {
                        string temp = QpAssociationPath;
                        return new Query.OrderByClauseProperty<T17>("Home.Phone", temp);
                    }
                }
                
                /// OrderBy for member 
                public virtual OrderBy_Address<T17> Address {
                    get {
                        string temp = QpAssociationPath;
                        temp = ((temp + ".") 
                                    + "Address");
                        return new OrderBy_Address<T17>("Home.Address", temp, true);
                    }
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_Customer
        public partial class Root_OrderBy_Customer : OrderBy_Customer<My.Simple.Model.Customer> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_Customer() : 
                    base("this", null) {
            }
        }
        
        /// OrderBy for member OrderBy_Address
        public partial class OrderBy_Address<T19> : Query.QueryPart
         {
            
            /// OrderBy for member .ctor
            public OrderBy_Address(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_Address(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T19> Pk {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T19>("Pk", temp);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_Address
        public partial class Root_OrderBy_Address : OrderBy_Address<My.Simple.Model.Address> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_Address() : 
                    base("this", null) {
            }
        }
        
        /// OrderBy for member OrderBy_CompositeCustomer
        public partial class OrderBy_CompositeCustomer<T20> : Query.QueryPart
         {
            
            /// OrderBy for member .ctor
            public OrderBy_CompositeCustomer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_CompositeCustomer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T20> Name {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T20>("Name", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T20> CustomerId {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T20>("CustomerId", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual OrderBy_BadCustomer<T20> Foo {
                get {
                    string temp = QpAssociationPath;
                    temp = ((temp + ".") 
                                + "Foo");
                    return new OrderBy_BadCustomer<T20>("Foo", temp, true);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_CompositeCustomer
        public partial class Root_OrderBy_CompositeCustomer : OrderBy_CompositeCustomer<My.Simple.Model.CompositeCustomer> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_CompositeCustomer() : 
                    base("this", null) {
            }
        }
        
        /// OrderBy for member OrderBy_BadCustomer
        public partial class OrderBy_BadCustomer<T21> : OrderBy_Customer<T21>
         {
            
            /// OrderBy for member .ctor
            public OrderBy_BadCustomer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_BadCustomer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T21> Foo {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T21>("Foo", temp);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_BadCustomer
        public partial class Root_OrderBy_BadCustomer : OrderBy_BadCustomer<My.Simple.Model.BadCustomer> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_BadCustomer() : 
                    base("this", null) {
            }
        }
        
        /// OrderBy for member OrderBy_BadCustomer2
        public partial class OrderBy_BadCustomer2<T22> : Query.QueryPart
         {
            
            /// OrderBy for member .ctor
            public OrderBy_BadCustomer2(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_BadCustomer2(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T22> Foo {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T22>("Foo", temp);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_BadCustomer2
        public partial class Root_OrderBy_BadCustomer2 : OrderBy_BadCustomer2<My.Simple.Model.BadCustomer2> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_BadCustomer2() : 
                    base("this", null) {
            }
        }
        
        /// OrderBy for member OrderBy_ValuedCustomer
        public partial class OrderBy_ValuedCustomer<T23> : OrderBy_Customer<T23>
         {
            
            /// OrderBy for member .ctor
            public OrderBy_ValuedCustomer(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_ValuedCustomer(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T23> Bar {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T23>("Bar", temp);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_ValuedCustomer
        public partial class Root_OrderBy_ValuedCustomer : OrderBy_ValuedCustomer<My.Simple.Model.ValuedCustomer> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_ValuedCustomer() : 
                    base("this", null) {
            }
        }
        
        /// OrderBy for member OrderBy_ValuedCustomer2
        public partial class OrderBy_ValuedCustomer2<T24> : Query.QueryPart
         {
            
            /// OrderBy for member .ctor
            public OrderBy_ValuedCustomer2(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_ValuedCustomer2(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T24> Bar {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T24>("Bar", temp);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_ValuedCustomer2
        public partial class Root_OrderBy_ValuedCustomer2 : OrderBy_ValuedCustomer2<My.Simple.Model.ValuedCustomer2> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_ValuedCustomer2() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class Queries {
        
        /// Named Query for member MyQuery
        public static string MyQuery {
            get {
                return "MyQuery";
            }
        }
    }
    
    public partial class Queries {
        
        /// Named Query for member HerQuery
        public static string HerQuery {
            get {
                return "HerQuery";
            }
        }
    }
}
