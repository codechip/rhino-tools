//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class For {
        
        /// Query Builder for member Project
        public static Query.QueryBuilder<NHibernate.Query.Generator.Tests.ActiveRecord.Project> Project {
            get {
                return new Query.QueryBuilder<NHibernate.Query.Generator.Tests.ActiveRecord.Project>();
            }
        }
    }
    
    public partial class Where {
        
        /// Where for member _root_Where_Project
        static Root_Where_Project _root_Where_Project = new Root_Where_Project();
        
        /// Where for member Project
        public static Root_Where_Project Project {
            get {
                return _root_Where_Project;
            }
        }
        
        /// Where for member Where_Project
        public partial class Where_Project<T1> : Query.WhereClause<T1>
         {
            
            /// Where for member .ctor
            public Where_Project(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_Project(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClause<T1> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClause<T1>("Id", temp);
                }
            }
            
            /// Where for member 
            public virtual Where_InstalledComponnet<T1> Componnet {
                get {
                    string temp = QpAssociationPath;
                    temp = ((temp + ".") 
                                + "Componnet");
                    return new Where_InstalledComponnet<T1>("Componnet", temp, true);
                }
            }
        }
        
        /// Where for member Root_Where_Project
        public partial class Root_Where_Project : Where_Project<NHibernate.Query.Generator.Tests.ActiveRecord.Project> {
            
            /// Where for member .ctor
            public Root_Where_Project() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// Projection for member _root_Projection_Project
        static Root_Projection_Project _root_Projection_Project = new Root_Projection_Project();
        
        /// Projection for member Project
        public static Root_Projection_Project Project {
            get {
                return _root_Projection_Project;
            }
        }
        
        /// Projection for member Projection_Project
        public partial class Projection_Project<T2> : Query.ProjectionEntity<T2>
         {
            
            /// Projection for member .ctor
            public Projection_Project(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_Project(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClausePropertyNumeric<T2> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClausePropertyNumeric<T2>("Id", temp);
                }
            }
            
            /// Projection for member 
            public virtual Projection_InstalledComponnet<T2> Componnet {
                get {
                    string temp = QpAssociationPath;
                    temp = ((temp + ".") 
                                + "Componnet");
                    return new Projection_InstalledComponnet<T2>("Componnet", temp, true);
                }
            }
        }
        
        /// Projection for member Root_Projection_Project
        public partial class Root_Projection_Project : Projection_Project<NHibernate.Query.Generator.Tests.ActiveRecord.Project> {
            
            /// Projection for member .ctor
            public Root_Projection_Project() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// OrderBy for member _root_OrderBy_Project
        static Root_OrderBy_Project _root_OrderBy_Project = new Root_OrderBy_Project();
        
        /// OrderBy for member Project
        public static Root_OrderBy_Project Project {
            get {
                return _root_OrderBy_Project;
            }
        }
        
        /// OrderBy for member OrderBy_Project
        public partial class OrderBy_Project<T3> : Query.QueryPart
         {
            
            /// OrderBy for member .ctor
            public OrderBy_Project(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_Project(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T3> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T3>("Id", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual OrderBy_InstalledComponnet<T3> Componnet {
                get {
                    string temp = QpAssociationPath;
                    temp = ((temp + ".") 
                                + "Componnet");
                    return new OrderBy_InstalledComponnet<T3>("Componnet", temp, true);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_Project
        public partial class Root_OrderBy_Project : OrderBy_Project<NHibernate.Query.Generator.Tests.ActiveRecord.Project> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_Project() : 
                    base("this", null) {
            }
        }
    }
}
