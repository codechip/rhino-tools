//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class For {
        
        /// Query Builder for member InstalledComponnet
        public static Query.QueryBuilder<NHibernate.Query.Generator.Tests.ActiveRecord.InstalledComponnet> InstalledComponnet {
            get {
                return new Query.QueryBuilder<NHibernate.Query.Generator.Tests.ActiveRecord.InstalledComponnet>();
            }
        }
    }
    
    public partial class Where {
        
        /// Where for member _root_Where_InstalledComponnet
        static Root_Where_InstalledComponnet _root_Where_InstalledComponnet = new Root_Where_InstalledComponnet();
        
        /// Where for member InstalledComponnet
        public static Root_Where_InstalledComponnet InstalledComponnet {
            get {
                return _root_Where_InstalledComponnet;
            }
        }
        
        /// Where for member Where_InstalledComponnet
        public partial class Where_InstalledComponnet<T1> : Query.WhereClause<T1>
         {
            
            /// Where for member .ctor
            public Where_InstalledComponnet(string name, string associationPath) : 
                    base(name, associationPath) {
            }
            
            /// Where for member .ctor
            public Where_InstalledComponnet(string name, string associationPath, bool backTrack) : 
                    base(name, associationPath, backTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClause<T1> Id {
                get {
                    string temp = associationPath;
                    return new Query.WhereClause<T1>("Id", temp);
                }
            }
            
            /// Where for member 
            public virtual Where_Componnet<T1> Component {
                get {
                    string temp = associationPath;
                    temp = ((temp + ".") 
                                + "Component");
                    return new Where_Componnet<T1>("Component", temp, true);
                }
            }
        }
        
        /// Where for member Root_Where_InstalledComponnet
        public partial class Root_Where_InstalledComponnet : Where_InstalledComponnet<NHibernate.Query.Generator.Tests.ActiveRecord.InstalledComponnet> {
            
            /// Where for member .ctor
            public Root_Where_InstalledComponnet() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// Projection for member _root_Projection_InstalledComponnet
        static Root_Projection_InstalledComponnet _root_Projection_InstalledComponnet = new Root_Projection_InstalledComponnet();
        
        /// Projection for member InstalledComponnet
        public static Root_Projection_InstalledComponnet InstalledComponnet {
            get {
                return _root_Projection_InstalledComponnet;
            }
        }
        
        /// Projection for member Projection_InstalledComponnet
        public partial class Projection_InstalledComponnet<T2> : Query.ProjectionEntity<T2>
         {
            
            /// Projection for member .ctor
            public Projection_InstalledComponnet(string name, string associationPath) : 
                    base(name, associationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_InstalledComponnet(string name, string associationPath, bool backTrack) : 
                    base(name, associationPath, backTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClausePropertyNumeric<T2> Id {
                get {
                    string temp = associationPath;
                    return new Query.ProjectionClausePropertyNumeric<T2>("Id", temp);
                }
            }
            
            /// Projection for member 
            public virtual Projection_Componnet<T2> Component {
                get {
                    string temp = associationPath;
                    temp = ((temp + ".") 
                                + "Component");
                    return new Projection_Componnet<T2>("Component", temp, true);
                }
            }
        }
        
        /// Projection for member Root_Projection_InstalledComponnet
        public partial class Root_Projection_InstalledComponnet : Projection_InstalledComponnet<NHibernate.Query.Generator.Tests.ActiveRecord.InstalledComponnet> {
            
            /// Projection for member .ctor
            public Root_Projection_InstalledComponnet() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// OrderBy for member _root_OrderBy_InstalledComponnet
        static Root_OrderBy_InstalledComponnet _root_OrderBy_InstalledComponnet = new Root_OrderBy_InstalledComponnet();
        
        /// OrderBy for member InstalledComponnet
        public static Root_OrderBy_InstalledComponnet InstalledComponnet {
            get {
                return _root_OrderBy_InstalledComponnet;
            }
        }
        
        /// OrderBy for member OrderBy_InstalledComponnet
        public partial class OrderBy_InstalledComponnet<T3> : Query.QueryPart
         {
            
            /// OrderBy for member .ctor
            public OrderBy_InstalledComponnet(string name, string associationPath) : 
                    base(name, associationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_InstalledComponnet(string name, string associationPath, bool backTrack) : 
                    base(name, associationPath, backTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T3> Id {
                get {
                    string temp = associationPath;
                    return new Query.OrderByClauseProperty<T3>("Id", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual OrderBy_Componnet<T3> Component {
                get {
                    string temp = associationPath;
                    temp = ((temp + ".") 
                                + "Component");
                    return new OrderBy_Componnet<T3>("Component", temp, true);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_InstalledComponnet
        public partial class Root_OrderBy_InstalledComponnet : OrderBy_InstalledComponnet<NHibernate.Query.Generator.Tests.ActiveRecord.InstalledComponnet> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_InstalledComponnet() : 
                    base("this", null) {
            }
        }
    }
}
