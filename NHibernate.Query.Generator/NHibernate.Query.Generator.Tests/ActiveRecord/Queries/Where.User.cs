//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class For {
        
        /// Query Builder for member User
        public static Query.QueryBuilder<NHibernate.Query.Generator.Tests.ActiveRecord.User> User {
            get {
                return new Query.QueryBuilder<NHibernate.Query.Generator.Tests.ActiveRecord.User>();
            }
        }
    }
    
    public partial class Where {
        
        /// Where for member _root_Where_User
        static Root_Where_User _root_Where_User = new Root_Where_User();
        
        /// Where for member User
        public static Root_Where_User User {
            get {
                return _root_Where_User;
            }
        }
        
        /// Where for member Where_User
        public partial class Where_User<T1> : Query.WhereClause<T1>
         {
            
            /// Where for member .ctor
            public Where_User(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_User(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T1> Name {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T1>("Name", temp);
                }
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T1> Email {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T1>("Email", temp);
                }
            }
            
            /// Where for member 
            public virtual Query.WhereClause<T1> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClause<T1>("Id", temp);
                }
            }
        }
        
        /// Where for member Root_Where_User
        public partial class Root_Where_User : Where_User<NHibernate.Query.Generator.Tests.ActiveRecord.User> {
            
            /// Where for member .ctor
            public Root_Where_User() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// Projection for member _root_Projection_User
        static Root_Projection_User _root_Projection_User = new Root_Projection_User();
        
        /// Projection for member User
        public static Root_Projection_User User {
            get {
                return _root_Projection_User;
            }
        }
        
        /// Projection for member Projection_User
        public partial class Projection_User<T2> : Query.ProjectionEntity<T2>
         {
            
            /// Projection for member .ctor
            public Projection_User(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_User(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T2> Name {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T2>("Name", temp);
                }
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T2> Email {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T2>("Email", temp);
                }
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T2> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T2>("Id", temp);
                }
            }
        }
        
        /// Projection for member Root_Projection_User
        public partial class Root_Projection_User : Projection_User<NHibernate.Query.Generator.Tests.ActiveRecord.User> {
            
            /// Projection for member .ctor
            public Root_Projection_User() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// OrderBy for member _root_OrderBy_User
        static Root_OrderBy_User _root_OrderBy_User = new Root_OrderBy_User();
        
        /// OrderBy for member User
        public static Root_OrderBy_User User {
            get {
                return _root_OrderBy_User;
            }
        }
        
        /// OrderBy for member OrderBy_User
        public partial class OrderBy_User<T3> : Query.QueryPart
         {
            
            /// OrderBy for member .ctor
            public OrderBy_User(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_User(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T3> Name {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T3>("Name", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T3> Email {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T3>("Email", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T3> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T3>("Id", temp);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_User
        public partial class Root_OrderBy_User : OrderBy_User<NHibernate.Query.Generator.Tests.ActiveRecord.User> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_User() : 
                    base("this", null) {
            }
        }
    }
}
