//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Query {
    
    
    public partial class For {
        
        /// Query Builder for member Payment
        public static Query.QueryBuilder<NHibernate.Query.Generator.Tests.ActiveRecord.Payment> Payment {
            get {
                return new Query.QueryBuilder<NHibernate.Query.Generator.Tests.ActiveRecord.Payment>();
            }
        }
    }
    
    public partial class Where {
        
        /// Where for member _root_Where_Payment
        static Root_Where_Payment _root_Where_Payment = new Root_Where_Payment();
        
        /// Where for member Payment
        public static Root_Where_Payment Payment {
            get {
                return _root_Where_Payment;
            }
        }
        
        /// Where for member Where_Payment
        public partial class Where_Payment<T1> : Query.WhereClause<T1>
         {
            
            /// Where for member .ctor
            public Where_Payment(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Where for member .ctor
            public Where_Payment(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T1> PayDate {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T1>("PayDate", temp);
                }
            }
            
            /// Where for member 
            public virtual Query.WhereClauseProperty<T1> Amount {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClauseProperty<T1>("Amount", temp);
                }
            }
            
            /// Where for member 
            public virtual Query.WhereClause<T1> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.WhereClause<T1>("Id", temp);
                }
            }
        }
        
        /// Where for member Root_Where_Payment
        public partial class Root_Where_Payment : Where_Payment<NHibernate.Query.Generator.Tests.ActiveRecord.Payment> {
            
            /// Where for member .ctor
            public Root_Where_Payment() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// Projection for member _root_Projection_Payment
        static Root_Projection_Payment _root_Projection_Payment = new Root_Projection_Payment();
        
        /// Projection for member Payment
        public static Root_Projection_Payment Payment {
            get {
                return _root_Projection_Payment;
            }
        }
        
        /// Projection for member Projection_Payment
        public partial class Projection_Payment<T2> : Query.ProjectionEntity<T2>
         {
            
            /// Projection for member .ctor
            public Projection_Payment(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// Projection for member .ctor
            public Projection_Payment(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T2> PayDate {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T2>("PayDate", temp);
                }
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T2> Amount {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T2>("Amount", temp);
                }
            }
            
            /// Projection for member 
            public virtual Query.ProjectionClauseProperty<T2> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.ProjectionClauseProperty<T2>("Id", temp);
                }
            }
        }
        
        /// Projection for member Root_Projection_Payment
        public partial class Root_Projection_Payment : Projection_Payment<NHibernate.Query.Generator.Tests.ActiveRecord.Payment> {
            
            /// Projection for member .ctor
            public Root_Projection_Payment() : 
                    base("this", null) {
            }
        }
    }
    
    public partial class OrderBy {
        
        /// OrderBy for member _root_OrderBy_Payment
        static Root_OrderBy_Payment _root_OrderBy_Payment = new Root_OrderBy_Payment();
        
        /// OrderBy for member Payment
        public static Root_OrderBy_Payment Payment {
            get {
                return _root_OrderBy_Payment;
            }
        }
        
        /// OrderBy for member OrderBy_Payment
        public partial class OrderBy_Payment<T3> : Query.QueryPart
         {
            
            /// OrderBy for member .ctor
            public OrderBy_Payment(string QpName, string QpAssociationPath) : 
                    base(QpName, QpAssociationPath) {
            }
            
            /// OrderBy for member .ctor
            public OrderBy_Payment(string QpName, string QpAssociationPath, bool QpBackTrack) : 
                    base(QpName, QpAssociationPath, QpBackTrack) {
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T3> PayDate {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T3>("PayDate", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T3> Amount {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T3>("Amount", temp);
                }
            }
            
            /// OrderBy for member 
            public virtual Query.OrderByClauseProperty<T3> Id {
                get {
                    string temp = QpAssociationPath;
                    return new Query.OrderByClauseProperty<T3>("Id", temp);
                }
            }
        }
        
        /// OrderBy for member Root_OrderBy_Payment
        public partial class Root_OrderBy_Payment : OrderBy_Payment<NHibernate.Query.Generator.Tests.ActiveRecord.Payment> {
            
            /// OrderBy for member .ctor
            public Root_OrderBy_Payment() : 
                    base("this", null) {
            }
        }
    }
}
