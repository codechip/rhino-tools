<?xml version="1.0" encoding='iso-8859-1' ?>
<project
	name="Rhino.Mocks.Partial"
	default="build"
	xmlns="http://nant.sf.net/release/0.85/nant.xsd"
>

	<property name="root.dir" value="../.." />
	<include buildfile="${root.dir}/common-project.xml" />

	<target name="init" depends="common.init">
		<property name="assembly.version" value="3.5.0.1337" />
		<property name="assembly.description" value="Rhino Mocks 3.5 - Mocking Framework" />
		
		<property name="project.name" value="Rhino.Mocks" if="${skip.merge.asm}"/>
		
		<assemblyfileset id="project.references" basedir="${build.dir}">
			<include name="Castle.Core.dll" />
			<include name="Castle.DynamicProxy2.dll" />
		</assemblyfileset>
	</target>

	<target name="generate-assemblyinfo" depends="init common.generate-assemblyinfo" />

	<target name="merge-asms" depends="init common.generate-assemblyinfo" unless="${skip.merge.asm}">
		<if test="${file::exists(build.dir + '/Rhino.Mocks.xml')}">
			<delete file="${build.dir}/Rhino.Mocks.xml" failonerror="true" />
		</if>
		<move file="${build.dir}/Rhino.Mocks.Partial.xml" tofile="${build.dir}/Rhino.Mocks.xml"/>
		<exec program="${lib.dir}/Tools/ILMerge.exe" basedir="${build.dir}">
			<arg value="${path::get-full-path( build.dir+'/Rhino.Mocks.Partial.dll')}" />
			<arg value="${path::get-full-path( build.dir + '/Castle.DynamicProxy2.dll')}" />
			<arg value="${path::get-full-path( build.dir + '/Castle.Core.dll')}" />
			<arg value="/out:${path::get-full-path( build.dir + '/Rhino.Mocks.dll') }" />
			<arg value="/t:library" />
			<arg value="/keyfile:${path::get-full-path( root.dir + '/ayende-open-source.snk' )}" />
			<arg value="/internalize:../ilmerge.exclude" />
			<arg value="/ndebug" unless="${build.debug == 'None'}" />
		</exec>
	</target>
	
	<target name="build" description="Build ${project::get-name()}" depends="generate-assemblyinfo common.compile-dll merge-asms" />

</project>
