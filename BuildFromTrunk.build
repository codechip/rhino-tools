<?xml version="1.0" encoding='iso-8859-1' ?>
<project
	name="rhino.tools.build.from.trunk"
	default="build"
	xmlns="http://nant.sf.net/release/0.85/nant.xsd"
>
	<property name="root.dir" value="." />
	
	<include buildfile="${root.dir}/BuildFromTrunk-Config.build" />
	
	<property name="configuration" value="debug" overwrite="false"/>
	<property name="svn.path" value="svn.exe" overwrite="false"/>
	<property name="castle.test.framework" value="nunit" overwrite="false"/>
	<property name="castle.test.console" value="nunit-console" overwrite="false"/>
	<property name="enable.tests" value="true" overwrite="false"/>

	<property name="nhibernate.lib.dir" value="${nhibernate.dir}/lib/net/3.5"/>
	<property name="nhibernate.build.dir" value="${nhibernate.dir}/build/NHibernate-2.1.0.Alpha1-debug/bin/${nant.settings.currentframework}"/>
	<property name="nhibernate.build.dir" value="${nhibernate.dir}/build/NHibernate-2.1.0.Alpha1-debug/bin/${nant.settings.currentframework}" if="${configuration == 'debug'} " />
	
	<property name="castle.lib.dir" value="${castle.dir}/SharedLibs/net/3.5"/>
	<property name="castle.build.dir" value="${castle.dir}/build/${nant.settings.currentframework}/${configuration}"/>
	
	<property name="rhino.lib.dir" value="${rhino.dir}/SharedLibs"/>
	<property name="rhino.build.dir" value="${rhino.dir}/build/${nant.settings.currentframework}/${configuration}"/>

	
	<target name="init"
		description="Initialize assemblies">

		<fileset id="nhibernate.assemblies" basedir="${nhibernate.build.dir}">
		
			<include name="NHibernate.???"/>
			<include name="Iesi.Collections.???"/>
			<include name="NHibernate.Mapping.Attributes.???"/>
			<include name="NHibernate.ByteCode.Castle.???"/>
			<include name="NHibernate.Search.???"/>
			<include name="NHibernate.Caches.Prevalence.???"/>
			<include name="NHibernate.Caches.MemCache.???"/>
			<include name="NHibernate.Caches.SysCache.???"/>
			<include name="NHibernate.Caches.SysCache2.???"/>
			<include name="NHibernate.UserTypes.SqlTypes.???"/>
			<include name="NHibernate.UserTypes.Oracle.??"/>
			
			<!-- Deprecated From NH Trunk, Still Needed for Castle Active Record -->
			<include name="HashCodeProvider.dll"/>
			<include name="NHibernate.Nullables.dll"/>
		</fileset>
		
		<fileset id="castle.assemblies" basedir="${castle.build.dir}">
			<include name="Castle.Core.???"/>
			<include name="Castle.DynamicProxy2.???"/>
			<include name="Castle.DynamicProxy.???"/>
			<include name="Castle.MicroKernel.???"/>
			<include name="Castle.Windsor.???"/>
			<include name="Castle.ActiveRecord.???"/>
			<include name="Castle.Components.Validator.???"/>
			<include name="Castle.Facilities.Logging.???"/>
			<include name="Castle.Services.Logging.Log4netIntegration.???"/>
			<include name="Castle.Services.Transaction.???"/>
			<include name="Castle.Facilities.AutomaticTransactionManagement.???"/>
			<include name="Castle.Components.Binder.???"/>
			<include name="Castle.Components.Common.EmailSender.???"/>
			<include name="Castle.Components.DictionaryAdapter.???"/>
			<include name="Castle.Components.Common.TemplateEngine.???"/>
			<include name="Castle.Components.Common.TemplateEngine.NVelocityTemplateEngine.???"/>
			<include name="Castle.Facilities.ActiveRecordIntegration.???"/>
			<include name="Castle.Facilities.NHibernateIntegration.???"/>
			<include name="Castle.MonoRail.Framework.???"/>
			<include name="Castle.MonoRail.TestSupport.???"/>
			<include name="Castle.MonoRail.Framework.Views.NVelocity.???"/>
			<include name="Castle.MonoRail.Views.Brail.???"/>
			<include name="Castle.MonoRail.ActiveRecordSupport.???"/>
			<include name="Castle.MonoRail.WindsorExtension.???"/>
			<include name="Castle.MonoRail.TransformFilters	.???"/>
		</fileset>
	</target>
	
	<target name="build"
		depends="init customise update-all build-all"
		description="Builds rhino.tools and all related dependencies">
	</target>
	
	<target name="customise">
		<!-- override this target using the init file, to supply your own values -->
	</target>
	
	<target name="update-all">
		<echo>Updating castle...</echo>
		<exec program="${svn.path}">
			<arg value="update"/>
			<arg value="${castle.dir}"/>
		</exec>
		<echo>Updating nhibernate...</echo>
		<exec program="${svn.path}">
			<arg value="update"/>
			<arg value="${nhibernate.dir}"/>
		</exec>
		<echo>Updating rhino...</echo>
		<exec program="${svn.path}">
			<arg value="update"/>
			<arg value="${rhino.dir}"/>
		</exec>
	</target>
	
	<target name="build-all" depends="build-nhibernate build-castle build-rhino">
	</target>
	
	<target name="build-nhibernate" depends="update-castle-dependencies-in-nhibernate">
	
		<nant buildfile="${nhibernate.dir}/default.build" target="clean build" unless="${enable.tests}">
			<properties>
				<property name="project.config" value="${configuration}"/>
			</properties>
		</nant>
		
		<nant buildfile="${nhibernate.dir}/default.build" target="clean build test" if="${enable.tests}">
			<properties>
				<property name="project.config" value="${configuration}"/>
			</properties>
		</nant>
		
	</target>
	
	<target name="update-castle-dependencies-in-nhibernate" depends="init">
	
		<delete>
			<fileset basedir="${nhibernate.lib.dir}">
				<include name="Castle.Core.*"/>
				<include name="Castle.DynamicProxy2.*"/>
			</fileset>
		</delete>
		
		<nant buildfile="${castle.dir}/default.build" target="clean init copy-referenced-assemblies">
			<properties>
				<property name="common.testrunner.enabled" value="${enable.tests}"/>
				<property name="project.config" value="${configuration}"/>
			</properties>
		</nant>
		<nant buildfile="${castle.dir}/Core/core.build" target="build">
			<properties>
				<property name="project.config" value="${configuration}"/>
				<property name="common.testrunner.enabled" value="${enable.tests}"/>
				<property name="${castle.test.framework}-console" value="${castle.test.console}"/>
			</properties>
		</nant>
		<nant buildfile="${castle.dir}/Tools/Castle.DynamicProxy2/Castle.DynamicProxy2.build" target="build">
			<properties>
				<property name="project.config" value="${configuration}"/>
				<property name="common.testrunner.enabled" value="${enable.tests}"/>
				<property name="${castle.test.framework}-console" value="${castle.test.console}"/>
			</properties>
		</nant>
		
		<copy todir="${nhibernate.lib.dir}">
			<fileset basedir="${castle.build.dir}">
				<include name="Castle.Core.???"/>
				<include name="Castle.DynamicProxy2.???"/>
			</fileset>
		</copy>
		
	</target>
	
	<target name="build-castle" depends="update-nhibernate-in-castle">

		<nant buildfile="${castle.dir}/default.build" target="clean build">
			<properties>
				<property name="common.testrunner.enabled" value="${enable.tests}"/>
				<property name="${castle.test.framework}-console" value="${castle.test.console}"
							 if="${enable.tests}"/>
				<property name="project.config" value="${configuration}"/>
			</properties>
		</nant>
	</target>
	
	<target name="update-nhibernate-in-castle" depends="init">
		<copy todir="${castle.lib.dir}">
			<fileset refid="nhibernate.assemblies"/>
		</copy>

	</target>
	
	<target name="build-rhino" depends="update-rhino-dependencies">
		<nant buildfile="${rhino.dir}/default.build" target="clean build">
			<properties>
				<property name="common.testrunner.enabled" value="${enable.tests}"/>
				<property name="project.config" value="${configuration}"/>
			</properties>
		</nant>
	</target>
	
	<target name="update-rhino-dependencies" depends="init">
		<copy todir="${rhino.lib.dir}/NHibernate">
			<fileset refid="nhibernate.assemblies"/>
		</copy>
		
		<copy todir="${rhino.lib.dir}/Castle">
			<fileset refid="castle.assemblies"/>
		</copy>
	</target>
</project>
